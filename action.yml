name: 'Build & test frontend reusable action'
description: 'Build & test frontend reusable action'

inputs:
  env:
    description: 'Environment'
    required: true
    default: 'development'
  artifact-name:
    description: 'Artifact name'
    required: true
    default: ''
  install-cmd:
    description: 'Command for installing dependencies'
    required: true
  build-cmd:
    description: 'Command for building'
    required: true
  lint-cmd:
    description: 'Command for linting'
    required: false
    default: ''
  test-cmd:
    description: 'Command for running testing'
    required: false
    default: ''
runs:
  using: 'composite'
    - name: 'Read .nvmrc'
      id: read-nvmrc
      run: echo "node-version=$(cat .nvmrc)" >> $GITHUB_OUTPUT

    - name: Set Node.js version
      uses: actions/setup-node@v4
      with:
        node-version: ${{ steps.read-nvmrc.outputs.node-version }}

    - name: 'Install'
      run: ${{ inputs.install-cmd }}

    - name: 'Lint'
      if: inputs.lint-cmd != ''
      run: ${{ inputs.lint-cmd }}

    - name: 'Build'
      run: ${{ inputs.build-cmd }}

    - name: 'Test'
      if: inputs.test-cmd != ''
      run: ${{ inputs.test-cmd }}
    
    # - name: Archive project files
    #   if: inputs.env != 'development'
    #   id: archive-project
    #   env:
    #     GIT_SHA: ${{ github.sha }}
    #   run: |
    #     tar -czvf ${{ github.workspace }}/mef-frontend.tgz dist/mef-frontend
    #     echo "artifact-name=mef-frontend" >> $GITHUB_OUTPUT
    #   shell: bash

    # - name: 'Archive'
    #   uses: 'actions/upload-artifact@v2'
    #   if: inputs.artifact-name != ''
    #   with:
    #     name: ${{ inputs.artifact-name }}
    #     path: 'dist'

