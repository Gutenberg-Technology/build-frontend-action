name: 'Build & test frontend reusable action'
description: 'Build & test frontend reusable action'
author: 'Gutenberg Technology'


inputs:
  artifact-name:
    description: 'Artifact name'
    required: false
    default: ''
  install-cmd:
    description: 'Command for installing dependencies'
    required: true
  build-cmd:
    description: 'Command for building'
    required: true
  lint-cmd:
    description: 'Command for linting'
    required: false
    default: ''
  test-cmd:
    description: 'Command for running testing'
    required: false
    default: ''
runs:
  using: 'composite'
  steps:
    - name: 'Read .nvmrc'
      id: read-nvmrc
      run: echo "node-version=$(cat .nvmrc)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Set Node.js version
      uses: actions/setup-node@v4
      with:
        node-version: ${{ steps.read-nvmrc.outputs.node-version }}

    - name: 'Install'
      run: ${{ inputs.install-cmd }}
      shell: bash

    - name: 'Lint'
      if: inputs.lint-cmd != ''
      run: ${{ inputs.lint-cmd }}
      shell: bash

    - name: 'Build'
      run: ${{ inputs.build-cmd }}
      shell: bash

    - name: 'Test'
      if: inputs.test-cmd != ''
      run: ${{ inputs.test-cmd }}
      shell: bash

    - name: 'ls before tar'
      run: pwd && ls -la
      shell: bash

    - name: Archive project files
      if: inputs.artifact-name != ''
      id: archive-project
      run: |
        tar -cvf ${{ github.workspace }}/${{ inputs.artifact-name }}.tar dist/${{ inputs.artifact-name }}
        echo "artifact-name=${{ inputs.artifact-name }}" >> $GITHUB_OUTPUT
      shell: bash

    - name: 'ls after tar'
      run: pwd && ls -la
      shell: bash

    - name: 'Upload Archive'
      uses: 'actions/upload-artifact@v4.3.1'
      if: inputs.artifact-name != ''
      with:
        name: ${{ inputs.artifact-name }}
        path: ${{ github.workspace }}/${{ inputs.artifact-name }}.tar
        if-no-files-found: error

    - name: Archive config files
      if: inputs.artifact-name != ''
      id: archive-config-files
      run: |
        tar -cvf ${{ github.workspace }}/${{ inputs.artifact-name }}-config-files.tar src/config/*.json
        echo "artifact-name-config-files=${{ inputs.artifact-name }}-config-files" >> $GITHUB_OUTPUT
      shell: bash

    - name: 'ls after tar'
      run: pwd && ls -la
      shell: bash

    - name: 'Upload config files archive'
      uses: 'actions/upload-artifact@v4.3.1'
      if: inputs.artifact-name != ''
      with:
        name: ${{ inputs.artifact-name }}-config-files
        path: ${{ github.workspace }}/${{ inputs.artifact-name }}-config-files.tar
        if-no-files-found: error